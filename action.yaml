name: bring-it
description: Run `@bring-it/npm` in workflows

inputs:
  node-version:
    description: node-version of actions/setup-node
    required: true
    default: lts/*
  npm-token:
    description: npm-auth-token for publish
    required: false
  custom-command:
    description: Custom shell command
    required: false
  publish-command:
    description: Custom publish command
    default: na exec bring-it npm publish

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Detect package manager
      shell: bash
      if: hashFiles('package.json') != ''
      run: |
        node -p "'PACKAGE_MANAGER='+(require('./package.json').packageManager||'').split('@')[0]" >> "$GITHUB_ENV"
        echo 'COREPACK_INTEGRITY_KEYS=0' >> "$GITHUB_ENV"

    - name: Install pnpm
      shell: bash
      if: env.PACKAGE_MANAGER == 'pnpm'
      run: corepack enable pnpm

    - name: Setup node
      uses: actions/setup-node@v4
      if: env.PACKAGE_MANAGER == 'undefined' || env.PACKAGE_MANAGER == ''
      with:
        node-version: ${{ inputs.node-version }}
        check-latest: true
        registry-url: https://registry.npmjs.org
        cache: npm

    - name: Setup node
      uses: actions/setup-node@v4
      if: env.PACKAGE_MANAGER != 'undefined' && env.PACKAGE_MANAGER != ''
      with:
        node-version: ${{ inputs.node-version }}
        check-latest: true
        registry-url: https://registry.npmjs.org
        cache: ${{ env.PACKAGE_MANAGER }}

    - name: Install npm/ni
      shell: bash
      run: |
        npm i -g npm@10 --force
        npm i -g @antfu/ni --force

    - name: Prepare corepack
      shell: bash
      if: env.PACKAGE_MANAGER != 'undefined' && env.PACKAGE_MANAGER != ''
      run: |
        npm i -g corepack@latest --force
        corepack enable npm
        corepack enable yarn
        corepack enable pnpm

    - name: Custom command
      shell: bash
      if: ${{ inputs.custom-command }}
      run: ${{ inputs.custom-command }}

    - name: Install
      shell: bash
      run: nci || ni || ni --force

    - name: Test
      shell: bash
      run: nr test --if-present

    - name: Git config
      shell: bash
      if: ${{ inputs.npm-token }}
      run: git config core.filemode false

    - name: Publish
      shell: bash
      if: ${{ inputs.npm-token }}
      run: ${{ inputs.publish-command }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
